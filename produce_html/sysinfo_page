#!/bin/bash

# sysinfo_page - A script to produce an HTML file
# $ sysinfo_page > sysinfo_page.html

# No spaces between variable name and equal sign
# CONSTANTS | $(command) <-- substitutes the results of the enclosed command.
# It provides a way to include content that will be given to the standard input of a command
# Environment variables are already set by the startup file
TITLE="System Information  for $HOSTNAME"
RIGHT_NOW=$(date +"%x %r %Z")
TIME_STAMP="Updated on $RIGHT_NOW by $USER"

###### FUNCTIONS
# Functions must appear before use them
# Must contain at least one valid command

system_info(){
	echo "<h2>System release info</h2>"
	echo "<p>Function not yet implemented</p>"
}

show_uptime(){
	echo "<h2>System uptime</h2>"
	echo "<pre>"
	uptime
	echo "</pre>"
}

drive_space(){
	echo "<h2>Filesystem space</h2>"
        echo "<pre>"
        df -h
	echo "</pre>"
}

home_space(){
	# Only the SUPER USER can get this information
	if [ "id -u" = "0" ]; then
		echo "<h2>Home directory space by user</h2>"
        	echo "<pre>"
        	echo "Bytes directory"
		du -s /Users/* | sort -nr 
        	echo "</pre>"
	fi
} # End of home_space function

###### MAIN

# This is a "here script", an additional form of I/O redirection.
# It provides a way to include content that will be given to the standard input of a command
cat <<- _EOF_
<html>
	<head>
		<title>$title $HOSTNAME</title>
	</head>

	<body>
		<h1>$HOSTNAME</h1>
		<p>$TIME_STAMP</p>
		$(system_info)
		$(show_uptime)
		$(drive_space)
		$(home_space)
	</body>
</html>

_EOF_

